[
  {
    "url": "https://api.github.com/repos/Factual/scarecrow/issues/227",
    "labels_url": "https://api.github.com/repos/Factual/scarecrow/issues/227/labels{/name}",
    "comments_url": "https://api.github.com/repos/Factual/scarecrow/issues/227/comments",
    "events_url": "https://api.github.com/repos/Factual/scarecrow/issues/227/events",
    "html_url": "https://github.com/Factual/scarecrow/pull/227",
    "id": 28548883,
    "number": 227,
    "title": "Feature/add helper function",
    "user": {
      "login": "ericlui",
      "id": 840439,
      "avatar_url": "https://avatars.githubusercontent.com/u/840439",
      "gravatar_id": "385707687776be5d7a0e076d00e19beb",
      "url": "https://api.github.com/users/ericlui",
      "html_url": "https://github.com/ericlui",
      "followers_url": "https://api.github.com/users/ericlui/followers",
      "following_url": "https://api.github.com/users/ericlui/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericlui/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericlui/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericlui/subscriptions",
      "organizations_url": "https://api.github.com/users/ericlui/orgs",
      "repos_url": "https://api.github.com/users/ericlui/repos",
      "events_url": "https://api.github.com/users/ericlui/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericlui/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "assignee": {
      "login": "ericlui",
      "id": 840439,
      "avatar_url": "https://avatars.githubusercontent.com/u/840439",
      "gravatar_id": "385707687776be5d7a0e076d00e19beb",
      "url": "https://api.github.com/users/ericlui",
      "html_url": "https://github.com/ericlui",
      "followers_url": "https://api.github.com/users/ericlui/followers",
      "following_url": "https://api.github.com/users/ericlui/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericlui/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericlui/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericlui/subscriptions",
      "organizations_url": "https://api.github.com/users/ericlui/orgs",
      "repos_url": "https://api.github.com/users/ericlui/repos",
      "events_url": "https://api.github.com/users/ericlui/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericlui/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 0,
    "created_at": "2014-03-01T02:59:26Z",
    "updated_at": "2014-03-01T02:59:31Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/Factual/scarecrow/pull/227",
      "diff_url": "https://github.com/Factual/scarecrow/pull/227.diff",
      "patch_url": "https://github.com/Factual/scarecrow/pull/227.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/Factual/scarecrow/issues/226",
    "labels_url": "https://api.github.com/repos/Factual/scarecrow/issues/226/labels{/name}",
    "comments_url": "https://api.github.com/repos/Factual/scarecrow/issues/226/comments",
    "events_url": "https://api.github.com/repos/Factual/scarecrow/issues/226/events",
    "html_url": "https://github.com/Factual/scarecrow/issues/226",
    "id": 28472078,
    "number": 226,
    "title": "Optimize dataset summarization",
    "user": {
      "login": "justin-factual",
      "id": 3803005,
      "avatar_url": "https://avatars.githubusercontent.com/u/3803005",
      "gravatar_id": "faf06d92aeb0beaa5a58f0345d65d59d",
      "url": "https://api.github.com/users/justin-factual",
      "html_url": "https://github.com/justin-factual",
      "followers_url": "https://api.github.com/users/justin-factual/followers",
      "following_url": "https://api.github.com/users/justin-factual/following{/other_user}",
      "gists_url": "https://api.github.com/users/justin-factual/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/justin-factual/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/justin-factual/subscriptions",
      "organizations_url": "https://api.github.com/users/justin-factual/orgs",
      "repos_url": "https://api.github.com/users/justin-factual/repos",
      "events_url": "https://api.github.com/users/justin-factual/events{/privacy}",
      "received_events_url": "https://api.github.com/users/justin-factual/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "assignee": {
      "login": "SevadaAbraamyan",
      "id": 5263456,
      "avatar_url": "https://avatars.githubusercontent.com/u/5263456",
      "gravatar_id": "5cdc8908aef13ede1a93f82f38e143e8",
      "url": "https://api.github.com/users/SevadaAbraamyan",
      "html_url": "https://github.com/SevadaAbraamyan",
      "followers_url": "https://api.github.com/users/SevadaAbraamyan/followers",
      "following_url": "https://api.github.com/users/SevadaAbraamyan/following{/other_user}",
      "gists_url": "https://api.github.com/users/SevadaAbraamyan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SevadaAbraamyan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SevadaAbraamyan/subscriptions",
      "organizations_url": "https://api.github.com/users/SevadaAbraamyan/orgs",
      "repos_url": "https://api.github.com/users/SevadaAbraamyan/repos",
      "events_url": "https://api.github.com/users/SevadaAbraamyan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SevadaAbraamyan/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 1,
    "created_at": "2014-02-28T01:44:13Z",
    "updated_at": "2014-02-28T02:04:30Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Right now we duplicate a lot of work when summarizing all the views in a dataset.  We want to cut this down as much as possible.\r\n\r\nThere are probably two main approaches we can take.  The first is to make a superset of all view fields and summarize them all at once.  Then the summarized values could be copied into separate summary objects for each view (there's some poc code for this in https://github.com/Factual/scarecrow/commit/64208036c8af55069b1c0a202693f948d6d8811d).  The other approach is to define core and extended views and summarize them like we currently do.  After summarization, we would copy the core fields into all the extended views and potentially run some extra post processors relevant to the extended view.\r\n\r\nAt one point, there was a discussion about using only one real view per dataset and treating extended attributes as logical views.  This would give us the summarization speedup automatically and reduce the number of indexes we build.  I think I remember @bfs mentioning that this might cause problems with federation, but I don't know what the exact issue was.  Do we think this might still be a solution, or is there something preventing that from working?"
  },
  {
    "url": "https://api.github.com/repos/Factual/scarecrow/issues/225",
    "labels_url": "https://api.github.com/repos/Factual/scarecrow/issues/225/labels{/name}",
    "comments_url": "https://api.github.com/repos/Factual/scarecrow/issues/225/comments",
    "events_url": "https://api.github.com/repos/Factual/scarecrow/issues/225/events",
    "html_url": "https://github.com/Factual/scarecrow/issues/225",
    "id": 28354889,
    "number": 225,
    "title": "Update scarecrow testing so features say \"not implemented\" rather than \"failed\"",
    "user": {
      "login": "ericlui",
      "id": 840439,
      "avatar_url": "https://avatars.githubusercontent.com/u/840439",
      "gravatar_id": "385707687776be5d7a0e076d00e19beb",
      "url": "https://api.github.com/users/ericlui",
      "html_url": "https://github.com/ericlui",
      "followers_url": "https://api.github.com/users/ericlui/followers",
      "following_url": "https://api.github.com/users/ericlui/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericlui/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericlui/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericlui/subscriptions",
      "organizations_url": "https://api.github.com/users/ericlui/orgs",
      "repos_url": "https://api.github.com/users/ericlui/repos",
      "events_url": "https://api.github.com/users/ericlui/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericlui/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/Factual/scarecrow/labels/P3",
        "name": "P3",
        "color": "02e10c"
      }
    ],
    "state": "open",
    "assignee": {
      "login": "rishifactual",
      "id": 6643952,
      "avatar_url": "https://avatars.githubusercontent.com/u/6643952",
      "gravatar_id": "d175d5c4183e8dc4e121256b200e5ce7",
      "url": "https://api.github.com/users/rishifactual",
      "html_url": "https://github.com/rishifactual",
      "followers_url": "https://api.github.com/users/rishifactual/followers",
      "following_url": "https://api.github.com/users/rishifactual/following{/other_user}",
      "gists_url": "https://api.github.com/users/rishifactual/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rishifactual/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rishifactual/subscriptions",
      "organizations_url": "https://api.github.com/users/rishifactual/orgs",
      "repos_url": "https://api.github.com/users/rishifactual/repos",
      "events_url": "https://api.github.com/users/rishifactual/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rishifactual/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 2,
    "created_at": "2014-02-26T18:02:50Z",
    "updated_at": "2014-02-27T21:22:49Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "@rishifactual \r\n\r\nOur current scarecrow testing framework supports both feature tests and regular tests. Feature tests are designed to be \"soft\" failures-- they emit a warning, and increment some counter, but they don't cause the build to break or prevent someone from checking in.\r\n\r\nRegular tests are stricter.\r\n\r\nBoth currently print \"failed\" before describing the failure state, which makes it hard to trivially grep for them. Having thought through the use case a bit, i don't think there's a time you're ever interested in both feature failures and regular failures, so i'd like to differentiate them a bit more sharply.\r\n\r\nThis should make it easier to find failures rather than feature-failures when grepping/searching through console output.\r\n\r\n```\r\n\u001B[01;31mFEATURE: failed\u001B[00m For args \"Mercado Juarez S/N Sn\": Expected \"Mercado Juarez s/n\" but got \"Mercado Juarez s/n s/n\"\r\n```\r\n\r\nThis was originally implemented by Chris Hallacy, but @mollyoconnor should be familiar enough to get you oriented."
  },
  {
    "url": "https://api.github.com/repos/Factual/scarecrow/issues/224",
    "labels_url": "https://api.github.com/repos/Factual/scarecrow/issues/224/labels{/name}",
    "comments_url": "https://api.github.com/repos/Factual/scarecrow/issues/224/comments",
    "events_url": "https://api.github.com/repos/Factual/scarecrow/issues/224/events",
    "html_url": "https://github.com/Factual/scarecrow/issues/224",
    "id": 28198260,
    "number": 224,
    "title": "Replacers should ordered by default",
    "user": {
      "login": "SevadaAbraamyan",
      "id": 5263456,
      "avatar_url": "https://avatars.githubusercontent.com/u/5263456",
      "gravatar_id": "5cdc8908aef13ede1a93f82f38e143e8",
      "url": "https://api.github.com/users/SevadaAbraamyan",
      "html_url": "https://github.com/SevadaAbraamyan",
      "followers_url": "https://api.github.com/users/SevadaAbraamyan/followers",
      "following_url": "https://api.github.com/users/SevadaAbraamyan/following{/other_user}",
      "gists_url": "https://api.github.com/users/SevadaAbraamyan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SevadaAbraamyan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SevadaAbraamyan/subscriptions",
      "organizations_url": "https://api.github.com/users/SevadaAbraamyan/orgs",
      "repos_url": "https://api.github.com/users/SevadaAbraamyan/repos",
      "events_url": "https://api.github.com/users/SevadaAbraamyan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SevadaAbraamyan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "assignee": {
      "login": "SevadaAbraamyan",
      "id": 5263456,
      "avatar_url": "https://avatars.githubusercontent.com/u/5263456",
      "gravatar_id": "5cdc8908aef13ede1a93f82f38e143e8",
      "url": "https://api.github.com/users/SevadaAbraamyan",
      "html_url": "https://github.com/SevadaAbraamyan",
      "followers_url": "https://api.github.com/users/SevadaAbraamyan/followers",
      "following_url": "https://api.github.com/users/SevadaAbraamyan/following{/other_user}",
      "gists_url": "https://api.github.com/users/SevadaAbraamyan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SevadaAbraamyan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SevadaAbraamyan/subscriptions",
      "organizations_url": "https://api.github.com/users/SevadaAbraamyan/orgs",
      "repos_url": "https://api.github.com/users/SevadaAbraamyan/repos",
      "events_url": "https://api.github.com/users/SevadaAbraamyan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SevadaAbraamyan/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 0,
    "created_at": "2014-02-24T21:23:09Z",
    "updated_at": "2014-02-24T21:23:09Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "I can't think of any reason we wouldn't want them to be ordered. Having them unordered by default exposes us to many potential bugs as a large number of the SC-Rules code seems to assume the replacers are ordered. Might as well just make them all ordered and avoid any potential bugs."
  },
  {
    "url": "https://api.github.com/repos/Factual/scarecrow/issues/223",
    "labels_url": "https://api.github.com/repos/Factual/scarecrow/issues/223/labels{/name}",
    "comments_url": "https://api.github.com/repos/Factual/scarecrow/issues/223/comments",
    "events_url": "https://api.github.com/repos/Factual/scarecrow/issues/223/events",
    "html_url": "https://github.com/Factual/scarecrow/issues/223",
    "id": 28028118,
    "number": 223,
    "title": "Multimap weirdness with trailing \".\"",
    "user": {
      "login": "HenryChi",
      "id": 663423,
      "avatar_url": "https://avatars.githubusercontent.com/u/663423",
      "gravatar_id": "59d708d8b12b8bb13bc4784d9d98b258",
      "url": "https://api.github.com/users/HenryChi",
      "html_url": "https://github.com/HenryChi",
      "followers_url": "https://api.github.com/users/HenryChi/followers",
      "following_url": "https://api.github.com/users/HenryChi/following{/other_user}",
      "gists_url": "https://api.github.com/users/HenryChi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HenryChi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HenryChi/subscriptions",
      "organizations_url": "https://api.github.com/users/HenryChi/orgs",
      "repos_url": "https://api.github.com/users/HenryChi/repos",
      "events_url": "https://api.github.com/users/HenryChi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HenryChi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/Factual/scarecrow/labels/P3",
        "name": "P3",
        "color": "02e10c"
      },
      {
        "url": "https://api.github.com/repos/Factual/scarecrow/labels/bug",
        "name": "bug",
        "color": "e102d8"
      }
    ],
    "state": "open",
    "assignee": {
      "login": "SevadaAbraamyan",
      "id": 5263456,
      "avatar_url": "https://avatars.githubusercontent.com/u/5263456",
      "gravatar_id": "5cdc8908aef13ede1a93f82f38e143e8",
      "url": "https://api.github.com/users/SevadaAbraamyan",
      "html_url": "https://github.com/SevadaAbraamyan",
      "followers_url": "https://api.github.com/users/SevadaAbraamyan/followers",
      "following_url": "https://api.github.com/users/SevadaAbraamyan/following{/other_user}",
      "gists_url": "https://api.github.com/users/SevadaAbraamyan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SevadaAbraamyan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SevadaAbraamyan/subscriptions",
      "organizations_url": "https://api.github.com/users/SevadaAbraamyan/orgs",
      "repos_url": "https://api.github.com/users/SevadaAbraamyan/repos",
      "events_url": "https://api.github.com/users/SevadaAbraamyan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SevadaAbraamyan/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 2,
    "created_at": "2014-02-21T09:23:05Z",
    "updated_at": "2014-02-28T06:20:22Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "When trying to match multimap keys to a value, it seems to ignore trailing \".\" in the value.\r\n\r\nFor example, for the following regex:\r\n\r\n/[, ]+ltd\\.$/i   Ltd\r\n\r\nI need to use \"ltd\" as the key and not \"ltd.\". This is also not because it's tokenizing on \".\" either cause for the following regex:\r\n\r\n/^B\\.C\\.$/i\r\n\r\nI can't use \"B\" as the key and must use \"B.C\".\r\n\r\nCC: @bfs \r\nAssigning to @morgan-mullaney only cause I see some multimap tickets from you but feel free to redirect."
  },
  {
    "url": "https://api.github.com/repos/Factual/scarecrow/issues/220",
    "labels_url": "https://api.github.com/repos/Factual/scarecrow/issues/220/labels{/name}",
    "comments_url": "https://api.github.com/repos/Factual/scarecrow/issues/220/comments",
    "events_url": "https://api.github.com/repos/Factual/scarecrow/issues/220/events",
    "html_url": "https://github.com/Factual/scarecrow/issues/220",
    "id": 27760991,
    "number": 220,
    "title": "Feature request: add helper functions $h.replace() and $h.split() ",
    "user": {
      "login": "ericlui",
      "id": 840439,
      "avatar_url": "https://avatars.githubusercontent.com/u/840439",
      "gravatar_id": "385707687776be5d7a0e076d00e19beb",
      "url": "https://api.github.com/users/ericlui",
      "html_url": "https://github.com/ericlui",
      "followers_url": "https://api.github.com/users/ericlui/followers",
      "following_url": "https://api.github.com/users/ericlui/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericlui/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericlui/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericlui/subscriptions",
      "organizations_url": "https://api.github.com/users/ericlui/orgs",
      "repos_url": "https://api.github.com/users/ericlui/repos",
      "events_url": "https://api.github.com/users/ericlui/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericlui/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/Factual/scarecrow/labels/P2",
        "name": "P2",
        "color": "d7e102"
      }
    ],
    "state": "open",
    "assignee": {
      "login": "ruichao-factual",
      "id": 4536474,
      "avatar_url": "https://avatars.githubusercontent.com/u/4536474",
      "gravatar_id": "f16cdfa8711b256643352f8af789037a",
      "url": "https://api.github.com/users/ruichao-factual",
      "html_url": "https://github.com/ruichao-factual",
      "followers_url": "https://api.github.com/users/ruichao-factual/followers",
      "following_url": "https://api.github.com/users/ruichao-factual/following{/other_user}",
      "gists_url": "https://api.github.com/users/ruichao-factual/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ruichao-factual/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ruichao-factual/subscriptions",
      "organizations_url": "https://api.github.com/users/ruichao-factual/orgs",
      "repos_url": "https://api.github.com/users/ruichao-factual/repos",
      "events_url": "https://api.github.com/users/ruichao-factual/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ruichao-factual/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 5,
    "created_at": "2014-02-18T00:57:58Z",
    "updated_at": "2014-03-01T03:00:04Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Was:\r\nhttps://github.com/Factual/scarecrow-rules/issues/2438\r\n\r\nIn order to use java regex engine exclusively, we need another two frequently used function replace and split according to issue https://github.com/Factual/scarecrow-rules/issues/2408\r\n\r\nAssigning to @justin-factual-- discuss with @morgan-mullaney."
  },
  {
    "url": "https://api.github.com/repos/Factual/scarecrow/issues/219",
    "labels_url": "https://api.github.com/repos/Factual/scarecrow/issues/219/labels{/name}",
    "comments_url": "https://api.github.com/repos/Factual/scarecrow/issues/219/comments",
    "events_url": "https://api.github.com/repos/Factual/scarecrow/issues/219/events",
    "html_url": "https://github.com/Factual/scarecrow/issues/219",
    "id": 27326920,
    "number": 219,
    "title": "Unicode Character Category can't been recognized in Map",
    "user": {
      "login": "fanchen1988",
      "id": 5967789,
      "avatar_url": "https://avatars.githubusercontent.com/u/5967789",
      "gravatar_id": "e6249964b508c6da971953127bc0c839",
      "url": "https://api.github.com/users/fanchen1988",
      "html_url": "https://github.com/fanchen1988",
      "followers_url": "https://api.github.com/users/fanchen1988/followers",
      "following_url": "https://api.github.com/users/fanchen1988/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanchen1988/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanchen1988/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanchen1988/subscriptions",
      "organizations_url": "https://api.github.com/users/fanchen1988/orgs",
      "repos_url": "https://api.github.com/users/fanchen1988/repos",
      "events_url": "https://api.github.com/users/fanchen1988/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanchen1988/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/Factual/scarecrow/labels/P2",
        "name": "P2",
        "color": "d7e102"
      }
    ],
    "state": "open",
    "assignee": {
      "login": "justin-factual",
      "id": 3803005,
      "avatar_url": "https://avatars.githubusercontent.com/u/3803005",
      "gravatar_id": "faf06d92aeb0beaa5a58f0345d65d59d",
      "url": "https://api.github.com/users/justin-factual",
      "html_url": "https://github.com/justin-factual",
      "followers_url": "https://api.github.com/users/justin-factual/followers",
      "following_url": "https://api.github.com/users/justin-factual/following{/other_user}",
      "gists_url": "https://api.github.com/users/justin-factual/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/justin-factual/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/justin-factual/subscriptions",
      "organizations_url": "https://api.github.com/users/justin-factual/orgs",
      "repos_url": "https://api.github.com/users/justin-factual/repos",
      "events_url": "https://api.github.com/users/justin-factual/events{/privacy}",
      "received_events_url": "https://api.github.com/users/justin-factual/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 9,
    "created_at": "2014-02-11T05:55:17Z",
    "updated_at": "2014-02-21T01:28:55Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "When I use the Unicode Character Category in map file (e.g. /\\p{Lu}/), it can't been recognized and encounter an error: No container found for name Lu."
  },
  {
    "url": "https://api.github.com/repos/Factual/scarecrow/issues/216",
    "labels_url": "https://api.github.com/repos/Factual/scarecrow/issues/216/labels{/name}",
    "comments_url": "https://api.github.com/repos/Factual/scarecrow/issues/216/comments",
    "events_url": "https://api.github.com/repos/Factual/scarecrow/issues/216/events",
    "html_url": "https://github.com/Factual/scarecrow/issues/216",
    "id": 26932313,
    "number": 216,
    "title": "Have mean summarizer return total_weight",
    "user": {
      "login": "bcoppersmith",
      "id": 1627088,
      "avatar_url": "https://avatars.githubusercontent.com/u/1627088",
      "gravatar_id": "43ca74b4d91948cc0a9e6b9eeb6bec24",
      "url": "https://api.github.com/users/bcoppersmith",
      "html_url": "https://github.com/bcoppersmith",
      "followers_url": "https://api.github.com/users/bcoppersmith/followers",
      "following_url": "https://api.github.com/users/bcoppersmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/bcoppersmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bcoppersmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bcoppersmith/subscriptions",
      "organizations_url": "https://api.github.com/users/bcoppersmith/orgs",
      "repos_url": "https://api.github.com/users/bcoppersmith/repos",
      "events_url": "https://api.github.com/users/bcoppersmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bcoppersmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/Factual/scarecrow/labels/P3",
        "name": "P3",
        "color": "02e10c"
      }
    ],
    "state": "open",
    "assignee": {
      "login": "justin-factual",
      "id": 3803005,
      "avatar_url": "https://avatars.githubusercontent.com/u/3803005",
      "gravatar_id": "faf06d92aeb0beaa5a58f0345d65d59d",
      "url": "https://api.github.com/users/justin-factual",
      "html_url": "https://github.com/justin-factual",
      "followers_url": "https://api.github.com/users/justin-factual/followers",
      "following_url": "https://api.github.com/users/justin-factual/following{/other_user}",
      "gists_url": "https://api.github.com/users/justin-factual/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/justin-factual/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/justin-factual/subscriptions",
      "organizations_url": "https://api.github.com/users/justin-factual/orgs",
      "repos_url": "https://api.github.com/users/justin-factual/repos",
      "events_url": "https://api.github.com/users/justin-factual/events{/privacy}",
      "received_events_url": "https://api.github.com/users/justin-factual/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 0,
    "created_at": "2014-02-05T01:46:50Z",
    "updated_at": "2014-02-05T01:46:50Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "currently, it doesn't return either total_weight or highest_weight\r\n\r\nwith mean, highest_weight doesn't make sense, but total_weight makes more sense.\r\n\r\np3-no rush"
  },
  {
    "url": "https://api.github.com/repos/Factual/scarecrow/issues/212",
    "labels_url": "https://api.github.com/repos/Factual/scarecrow/issues/212/labels{/name}",
    "comments_url": "https://api.github.com/repos/Factual/scarecrow/issues/212/comments",
    "events_url": "https://api.github.com/repos/Factual/scarecrow/issues/212/events",
    "html_url": "https://github.com/Factual/scarecrow/issues/212",
    "id": 26062198,
    "number": 212,
    "title": "RFC: Add support to import functions into the local namespace",
    "user": {
      "login": "morgan-mullaney",
      "id": 5216563,
      "avatar_url": "https://avatars.githubusercontent.com/u/5216563",
      "gravatar_id": "f527cf81ec7833f54088c167f0f17f8f",
      "url": "https://api.github.com/users/morgan-mullaney",
      "html_url": "https://github.com/morgan-mullaney",
      "followers_url": "https://api.github.com/users/morgan-mullaney/followers",
      "following_url": "https://api.github.com/users/morgan-mullaney/following{/other_user}",
      "gists_url": "https://api.github.com/users/morgan-mullaney/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morgan-mullaney/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morgan-mullaney/subscriptions",
      "organizations_url": "https://api.github.com/users/morgan-mullaney/orgs",
      "repos_url": "https://api.github.com/users/morgan-mullaney/repos",
      "events_url": "https://api.github.com/users/morgan-mullaney/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morgan-mullaney/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/Factual/scarecrow/labels/feature+request",
        "name": "feature request",
        "color": "02d7e1"
      }
    ],
    "state": "open",
    "assignee": {
      "login": "morgan-mullaney",
      "id": 5216563,
      "avatar_url": "https://avatars.githubusercontent.com/u/5216563",
      "gravatar_id": "f527cf81ec7833f54088c167f0f17f8f",
      "url": "https://api.github.com/users/morgan-mullaney",
      "html_url": "https://github.com/morgan-mullaney",
      "followers_url": "https://api.github.com/users/morgan-mullaney/followers",
      "following_url": "https://api.github.com/users/morgan-mullaney/following{/other_user}",
      "gists_url": "https://api.github.com/users/morgan-mullaney/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morgan-mullaney/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morgan-mullaney/subscriptions",
      "organizations_url": "https://api.github.com/users/morgan-mullaney/orgs",
      "repos_url": "https://api.github.com/users/morgan-mullaney/repos",
      "events_url": "https://api.github.com/users/morgan-mullaney/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morgan-mullaney/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 3,
    "created_at": "2014-01-22T02:21:04Z",
    "updated_at": "2014-01-28T23:25:19Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "To put it bluntly, calling library functions using $p.execute is one of the biggest impediments to writing good DRY sc-rules code, and the [interest](https://github.com/Factual/scarecrow-rules/commit/f67ff5c9fc181910b4535b8a615a978e0fb6d5ff#commitcomment-4964890) on that technical debt is piling up. We need a way to easily import functions or entire libraries into the local namespace.\r\n\r\nThe ideal solution would be to add some kind of 'refer' directive in the YML file syntax, so you could do e.g. \r\n\r\n    import:\r\n      - common.Utilities refer applyCharMap\r\n\r\nand applyCharMap would be available to call in the local namespace.\r\n\r\nA less awesome but still workable solution would be to have a `$p.getFn` helper that lets you do e.g. `applyCharMap = $p.getFn('common.Utilities#applyCharMap')` at the top of the javascript file for the same effect.\r\n\r\nI know that Clojure is (unfortunately) a second class citizen in scr, but the most excellent solution of all would enable `require`'s to work as expected for Clojure scr code.\r\n\r\ncc: @mollyoconnor @ericlui @justin-factual "
  },
  {
    "url": "https://api.github.com/repos/Factual/scarecrow/issues/208",
    "labels_url": "https://api.github.com/repos/Factual/scarecrow/issues/208/labels{/name}",
    "comments_url": "https://api.github.com/repos/Factual/scarecrow/issues/208/comments",
    "events_url": "https://api.github.com/repos/Factual/scarecrow/issues/208/events",
    "html_url": "https://github.com/Factual/scarecrow/issues/208",
    "id": 24221843,
    "number": 208,
    "title": "ComputeWeights should support setting weights by sourceId like sourceUrl",
    "user": {
      "login": "morgan-mullaney",
      "id": 5216563,
      "avatar_url": "https://avatars.githubusercontent.com/u/5216563",
      "gravatar_id": "f527cf81ec7833f54088c167f0f17f8f",
      "url": "https://api.github.com/users/morgan-mullaney",
      "html_url": "https://github.com/morgan-mullaney",
      "followers_url": "https://api.github.com/users/morgan-mullaney/followers",
      "following_url": "https://api.github.com/users/morgan-mullaney/following{/other_user}",
      "gists_url": "https://api.github.com/users/morgan-mullaney/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morgan-mullaney/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morgan-mullaney/subscriptions",
      "organizations_url": "https://api.github.com/users/morgan-mullaney/orgs",
      "repos_url": "https://api.github.com/users/morgan-mullaney/repos",
      "events_url": "https://api.github.com/users/morgan-mullaney/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morgan-mullaney/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/Factual/scarecrow/labels/feature+request",
        "name": "feature request",
        "color": "02d7e1"
      }
    ],
    "state": "open",
    "assignee": {
      "login": "justin-factual",
      "id": 3803005,
      "avatar_url": "https://avatars.githubusercontent.com/u/3803005",
      "gravatar_id": "faf06d92aeb0beaa5a58f0345d65d59d",
      "url": "https://api.github.com/users/justin-factual",
      "html_url": "https://github.com/justin-factual",
      "followers_url": "https://api.github.com/users/justin-factual/followers",
      "following_url": "https://api.github.com/users/justin-factual/following{/other_user}",
      "gists_url": "https://api.github.com/users/justin-factual/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/justin-factual/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/justin-factual/subscriptions",
      "organizations_url": "https://api.github.com/users/justin-factual/orgs",
      "repos_url": "https://api.github.com/users/justin-factual/repos",
      "events_url": "https://api.github.com/users/justin-factual/events{/privacy}",
      "received_events_url": "https://api.github.com/users/justin-factual/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 0,
    "created_at": "2013-12-13T01:30:56Z",
    "updated_at": "2014-02-07T00:41:45Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Ideally we should be able to set the weights in the same mapfile. P1 because this is blocking work for the Bing sprint."
  },
  {
    "url": "https://api.github.com/repos/Factual/scarecrow/issues/204",
    "labels_url": "https://api.github.com/repos/Factual/scarecrow/issues/204/labels{/name}",
    "comments_url": "https://api.github.com/repos/Factual/scarecrow/issues/204/comments",
    "events_url": "https://api.github.com/repos/Factual/scarecrow/issues/204/events",
    "html_url": "https://github.com/Factual/scarecrow/issues/204",
    "id": 22641306,
    "number": 204,
    "title": "Better error for missing views",
    "user": {
      "login": "sporter13",
      "id": 5016573,
      "avatar_url": "https://avatars.githubusercontent.com/u/5016573",
      "gravatar_id": "b1830608c093a4a84953ad0393fb8bc4",
      "url": "https://api.github.com/users/sporter13",
      "html_url": "https://github.com/sporter13",
      "followers_url": "https://api.github.com/users/sporter13/followers",
      "following_url": "https://api.github.com/users/sporter13/following{/other_user}",
      "gists_url": "https://api.github.com/users/sporter13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sporter13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sporter13/subscriptions",
      "organizations_url": "https://api.github.com/users/sporter13/orgs",
      "repos_url": "https://api.github.com/users/sporter13/repos",
      "events_url": "https://api.github.com/users/sporter13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sporter13/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/Factual/scarecrow/labels/feature+request",
        "name": "feature request",
        "color": "02d7e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2013-11-14T03:51:24Z",
    "updated_at": "2013-12-11T22:32:08Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "When running \r\n```\r\nscarecrow view:summarize j8RrkJ geo_test.json\r\n```\r\n getting the error: \r\n\r\n```\r\n/home/stephanie/.rvm/rubies/jruby-1.7.3/lib/ruby/1.9/rake/task.rb:168 warning: singleton on non-persistent Java type Java::JavaLang::ClassCastException (http://wiki.jruby.org/Persistence)\r\nAssembler.java:56:in `load': java.lang.ClassCastException: java.lang.String cannot be cast to net.minidev.json.JSONObject\r\n\tfrom Scarecrow.java:458:in `boot'\r\n```\r\n\r\nThe problem is that j8RrkJ is not a valid view. The error should reflect this."
  },
  {
    "url": "https://api.github.com/repos/Factual/scarecrow/issues/202",
    "labels_url": "https://api.github.com/repos/Factual/scarecrow/issues/202/labels{/name}",
    "comments_url": "https://api.github.com/repos/Factual/scarecrow/issues/202/comments",
    "events_url": "https://api.github.com/repos/Factual/scarecrow/issues/202/events",
    "html_url": "https://github.com/Factual/scarecrow/issues/202",
    "id": 22175237,
    "number": 202,
    "title": "getReplacer and getEntireValueReplacer always matches \"good\"",
    "user": {
      "login": "HenryChi",
      "id": 663423,
      "avatar_url": "https://avatars.githubusercontent.com/u/663423",
      "gravatar_id": "59d708d8b12b8bb13bc4784d9d98b258",
      "url": "https://api.github.com/users/HenryChi",
      "html_url": "https://github.com/HenryChi",
      "followers_url": "https://api.github.com/users/HenryChi/followers",
      "following_url": "https://api.github.com/users/HenryChi/following{/other_user}",
      "gists_url": "https://api.github.com/users/HenryChi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HenryChi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HenryChi/subscriptions",
      "organizations_url": "https://api.github.com/users/HenryChi/orgs",
      "repos_url": "https://api.github.com/users/HenryChi/repos",
      "events_url": "https://api.github.com/users/HenryChi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HenryChi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "assignee": {
      "login": "bcoppersmith",
      "id": 1627088,
      "avatar_url": "https://avatars.githubusercontent.com/u/1627088",
      "gravatar_id": "43ca74b4d91948cc0a9e6b9eeb6bec24",
      "url": "https://api.github.com/users/bcoppersmith",
      "html_url": "https://github.com/bcoppersmith",
      "followers_url": "https://api.github.com/users/bcoppersmith/followers",
      "following_url": "https://api.github.com/users/bcoppersmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/bcoppersmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bcoppersmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bcoppersmith/subscriptions",
      "organizations_url": "https://api.github.com/users/bcoppersmith/orgs",
      "repos_url": "https://api.github.com/users/bcoppersmith/repos",
      "events_url": "https://api.github.com/users/bcoppersmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bcoppersmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 3,
    "created_at": "2013-11-06T06:13:35Z",
    "updated_at": "2013-11-07T02:52:39Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "I came across this weird bug where any map used as a replacer (both getReplacer and getEntireValueReplacer) always matches and replaces \"good\" (case insensitive) to \"yes\".\r\n\r\nTo reproduce:\r\n1. Using the following input:\r\n```\r\n{\"md5\":\"3fa8233346c20244d62918e9331b6aa7\",\"inputDate\":0,\"processingState\":\"UNPROCESSED\",\"payload\":{\"name\":\"good\"},\"inputMeta\":{\"origin\":\"SEED\",\"type\":\"STANDARD\",\"sourceUrl\":\"http://insiderpages.com/b/15244341677/good-times-log-cabin-hollandale\",\"notes\":{\"original_category\":\"Restaurants\"}},\"uuid\":\"84d4cba4-fafa-4791-bc9a-71deaf500708\"}\r\n```\r\n2. Run it through ```scarecrow datatype:extract product.restaurants.LGOrganic```. It should return \"yes\" but shouldn't.\r\n\r\nI have however noticed putting \"good\" as the value in a regression test won't reproduce the issue."
  },
  {
    "url": "https://api.github.com/repos/Factual/scarecrow/issues/194",
    "labels_url": "https://api.github.com/repos/Factual/scarecrow/issues/194/labels{/name}",
    "comments_url": "https://api.github.com/repos/Factual/scarecrow/issues/194/comments",
    "events_url": "https://api.github.com/repos/Factual/scarecrow/issues/194/events",
    "html_url": "https://github.com/Factual/scarecrow/issues/194",
    "id": 19077841,
    "number": 194,
    "title": "tags visibility in hotels-us",
    "user": {
      "login": "BradleyFactual",
      "id": 3768818,
      "avatar_url": "https://avatars.githubusercontent.com/u/3768818",
      "gravatar_id": "ea5a075e255d3eb83089b81221f422d8",
      "url": "https://api.github.com/users/BradleyFactual",
      "html_url": "https://github.com/BradleyFactual",
      "followers_url": "https://api.github.com/users/BradleyFactual/followers",
      "following_url": "https://api.github.com/users/BradleyFactual/following{/other_user}",
      "gists_url": "https://api.github.com/users/BradleyFactual/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BradleyFactual/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BradleyFactual/subscriptions",
      "organizations_url": "https://api.github.com/users/BradleyFactual/orgs",
      "repos_url": "https://api.github.com/users/BradleyFactual/repos",
      "events_url": "https://api.github.com/users/BradleyFactual/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BradleyFactual/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2013-09-05T22:11:48Z",
    "updated_at": "2013-09-19T18:34:49Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "*tags* are behaving funny in hotels-us, and I can't quite trace the configuration.\r\n\r\nCurrently, the tags field shows up in the schema: http://www.factual.com/data/t/hotels-us/schema\r\n\r\nI can write a row filter that accesses it:\r\n\r\nhttp://api.v3.factual.com/t/hotels-us?KEY=dRnfJs90BLPkVxUUchqYJfA1CAaKThG8FZTT2CCT&filters={%22tags%22:{%22$blank%22:false}}\r\n\r\nHowever it is not visible in the actual API:\r\n\r\nhttp://api.v3.factual.com/t/hotels-us?select=tags&KEY=dRnfJs90BLPkVxUUchqYJfA1CAaKThG8FZTT2CCT&filters={%22tags%22:{%22$blank%22:false}}\r\n\r\nreturns: \r\n\r\n    {\r\n      \"version\": 3,\r\n      \"status\": \"error\",\r\n      \"error_type\": \"InvalidFilterArgument\",\r\n      \"message\": \"Parameter 'select' references unknown field tags. For documentation, please see: http://developer.factual.com.\"\r\n    }\r\n\r\nLooking in scarecrow-rules/datasets/v7Th7Bn.rb, I see the visibility set to 0.\r\n\r\nI wasn't able to find any other visibility specs for this field in the view (but that's not comprehensive).\r\n\r\nThe expected visibility is for it not to show up in the schema, or be accesible from the API. Would that be visibility -1?"
  },
  {
    "url": "https://api.github.com/repos/Factual/scarecrow/issues/192",
    "labels_url": "https://api.github.com/repos/Factual/scarecrow/issues/192/labels{/name}",
    "comments_url": "https://api.github.com/repos/Factual/scarecrow/issues/192/comments",
    "events_url": "https://api.github.com/repos/Factual/scarecrow/issues/192/events",
    "html_url": "https://github.com/Factual/scarecrow/issues/192",
    "id": 18269079,
    "number": 192,
    "title": "Define q= query in code",
    "user": {
      "login": "BradleyFactual",
      "id": 3768818,
      "avatar_url": "https://avatars.githubusercontent.com/u/3768818",
      "gravatar_id": "ea5a075e255d3eb83089b81221f422d8",
      "url": "https://api.github.com/users/BradleyFactual",
      "html_url": "https://github.com/BradleyFactual",
      "followers_url": "https://api.github.com/users/BradleyFactual/followers",
      "following_url": "https://api.github.com/users/BradleyFactual/following{/other_user}",
      "gists_url": "https://api.github.com/users/BradleyFactual/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BradleyFactual/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BradleyFactual/subscriptions",
      "organizations_url": "https://api.github.com/users/BradleyFactual/orgs",
      "repos_url": "https://api.github.com/users/BradleyFactual/repos",
      "events_url": "https://api.github.com/users/BradleyFactual/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BradleyFactual/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 3,
    "created_at": "2013-08-19T23:04:03Z",
    "updated_at": "2013-08-29T20:06:40Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Related to https://github.com/Factual/front/issues/2862\r\n\r\nI'd like to propose an alternative to our current specification for full-text search in tables as follows:\r\n\r\n1. per field, \"searchable\" be defined ONLY as which field are indexed for search. That means, these are fields that using the $search operator for row filters works on. It also means that these are the onl _potential_ fields that the q= operator would search across.\r\n\r\n2. Do away with defining the search weights per field as parameters. Instead, create a search_function variable per table, where we define a javascript function with the following properties:\r\n\r\nGiven a request object, return a string representing a SOLR query. So, basically:\r\n\r\nfunction search(requestParams) {\r\n  return solr;\r\n}\r\n\r\nTo make life easier, we could create some standardized functions that can easily generate default search behaviors for tables that haven't been thoughtfully defined. \r\n\r\nThis would have a number of benefits:\r\n* The recent work where we define custom sorts could be defined here without deploying new front code\r\n* Searches would be (for better of worse) more tightly coupled to the schemas of each table\r\n* All tuning, sorting, and blended ranking style behaviors would be in a single place.\r\n\r\nWould like input from @forrestc, @jeffsu, @leonchen, @williamlao, and @CMBleakley on this before green lighting."
  },
  {
    "url": "https://api.github.com/repos/Factual/scarecrow/issues/191",
    "labels_url": "https://api.github.com/repos/Factual/scarecrow/issues/191/labels{/name}",
    "comments_url": "https://api.github.com/repos/Factual/scarecrow/issues/191/comments",
    "events_url": "https://api.github.com/repos/Factual/scarecrow/issues/191/events",
    "html_url": "https://github.com/Factual/scarecrow/issues/191",
    "id": 18162945,
    "number": 191,
    "title": "Dedupe Inputs with same sourceUrl domain",
    "user": {
      "login": "bcoppersmith",
      "id": 1627088,
      "avatar_url": "https://avatars.githubusercontent.com/u/1627088",
      "gravatar_id": "43ca74b4d91948cc0a9e6b9eeb6bec24",
      "url": "https://api.github.com/users/bcoppersmith",
      "html_url": "https://github.com/bcoppersmith",
      "followers_url": "https://api.github.com/users/bcoppersmith/followers",
      "following_url": "https://api.github.com/users/bcoppersmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/bcoppersmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bcoppersmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bcoppersmith/subscriptions",
      "organizations_url": "https://api.github.com/users/bcoppersmith/orgs",
      "repos_url": "https://api.github.com/users/bcoppersmith/repos",
      "events_url": "https://api.github.com/users/bcoppersmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bcoppersmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 14,
    "created_at": "2013-08-16T15:29:12Z",
    "updated_at": "2013-08-19T19:59:12Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "So, imagine three inputs that make up a cluster:\r\n1. INPUT A: { sourceUrl => foursquare.com, partnerId => Pipelines}\r\n2. INPUT B: { sourceUrl => foursquare.com, partnerId => Feeds}\r\n3. INPUT C: { sourceUrl => foursquare.com}\r\n\r\nMy understanding is that inputs A, B, and C will all be treated as \"unique\". In effect, this \"triple-sourcing\" will (most likely) give the cluster enough confidence to pass into Stable -- even though all the inputs originated from Foursquare.\r\n\r\nHere's a real-life example: http://stitch.corp.factual.com/input/txIgmU/935b8beb-c28e-4f6c-af74-c9d2167c1b7f?viewId=Iw1HPj\r\n\r\nMy question is: should we consider inputs from the same sourceUrl domain the same, irrespective of their other partnerId/sourceId/userId fields?\r\n\r\nI ask because I spent most of yesterday rewriting inputs so we'd have fewer examples like the above, where multiple inputs from the same sourceUrl cause a summary to export. If we consider inputs A, B, and C to be the same, it'll remove a fair amount of junk/dupes from the U.S.\r\n\r\ndoes that make sense? i might be missing a big reason why we treat the three inputs above as unique...\r\nwould like to assign to @justin-factual but don't have write perms."
  },
  {
    "url": "https://api.github.com/repos/Factual/scarecrow/issues/187",
    "labels_url": "https://api.github.com/repos/Factual/scarecrow/issues/187/labels{/name}",
    "comments_url": "https://api.github.com/repos/Factual/scarecrow/issues/187/comments",
    "events_url": "https://api.github.com/repos/Factual/scarecrow/issues/187/events",
    "html_url": "https://github.com/Factual/scarecrow/issues/187",
    "id": 16296026,
    "number": 187,
    "title": "AlignHelper - refactor Matcher method",
    "user": {
      "login": "jake-factual",
      "id": 2625959,
      "avatar_url": "https://avatars.githubusercontent.com/u/2625959",
      "gravatar_id": "4747668edb967d60d07b29a2f94e8308",
      "url": "https://api.github.com/users/jake-factual",
      "html_url": "https://github.com/jake-factual",
      "followers_url": "https://api.github.com/users/jake-factual/followers",
      "following_url": "https://api.github.com/users/jake-factual/following{/other_user}",
      "gists_url": "https://api.github.com/users/jake-factual/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jake-factual/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jake-factual/subscriptions",
      "organizations_url": "https://api.github.com/users/jake-factual/orgs",
      "repos_url": "https://api.github.com/users/jake-factual/repos",
      "events_url": "https://api.github.com/users/jake-factual/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jake-factual/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/Factual/scarecrow/labels/P3",
        "name": "P3",
        "color": "02e10c"
      }
    ],
    "state": "open",
    "assignee": {
      "login": "jake-factual",
      "id": 2625959,
      "avatar_url": "https://avatars.githubusercontent.com/u/2625959",
      "gravatar_id": "4747668edb967d60d07b29a2f94e8308",
      "url": "https://api.github.com/users/jake-factual",
      "html_url": "https://github.com/jake-factual",
      "followers_url": "https://api.github.com/users/jake-factual/followers",
      "following_url": "https://api.github.com/users/jake-factual/following{/other_user}",
      "gists_url": "https://api.github.com/users/jake-factual/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jake-factual/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jake-factual/subscriptions",
      "organizations_url": "https://api.github.com/users/jake-factual/orgs",
      "repos_url": "https://api.github.com/users/jake-factual/repos",
      "events_url": "https://api.github.com/users/jake-factual/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jake-factual/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 1,
    "created_at": "2013-07-03T00:32:34Z",
    "updated_at": "2013-07-03T02:43:35Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "That is way too large and complex for a single method.  Setup alone could stand to have a separate method.  Match, mismatch, insert, delete, and transpose conditions could be broken out into separate methods with appropriate naming to make it much clearer what is going on here."
  },
  {
    "url": "https://api.github.com/repos/Factual/scarecrow/issues/185",
    "labels_url": "https://api.github.com/repos/Factual/scarecrow/issues/185/labels{/name}",
    "comments_url": "https://api.github.com/repos/Factual/scarecrow/issues/185/comments",
    "events_url": "https://api.github.com/repos/Factual/scarecrow/issues/185/events",
    "html_url": "https://github.com/Factual/scarecrow/issues/185",
    "id": 16294546,
    "number": 185,
    "title": "Expand character matching coverage for AlignHelper",
    "user": {
      "login": "jake-factual",
      "id": 2625959,
      "avatar_url": "https://avatars.githubusercontent.com/u/2625959",
      "gravatar_id": "4747668edb967d60d07b29a2f94e8308",
      "url": "https://api.github.com/users/jake-factual",
      "html_url": "https://github.com/jake-factual",
      "followers_url": "https://api.github.com/users/jake-factual/followers",
      "following_url": "https://api.github.com/users/jake-factual/following{/other_user}",
      "gists_url": "https://api.github.com/users/jake-factual/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jake-factual/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jake-factual/subscriptions",
      "organizations_url": "https://api.github.com/users/jake-factual/orgs",
      "repos_url": "https://api.github.com/users/jake-factual/repos",
      "events_url": "https://api.github.com/users/jake-factual/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jake-factual/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/Factual/scarecrow/labels/P3",
        "name": "P3",
        "color": "02e10c"
      }
    ],
    "state": "open",
    "assignee": {
      "login": "jake-factual",
      "id": 2625959,
      "avatar_url": "https://avatars.githubusercontent.com/u/2625959",
      "gravatar_id": "4747668edb967d60d07b29a2f94e8308",
      "url": "https://api.github.com/users/jake-factual",
      "html_url": "https://github.com/jake-factual",
      "followers_url": "https://api.github.com/users/jake-factual/followers",
      "following_url": "https://api.github.com/users/jake-factual/following{/other_user}",
      "gists_url": "https://api.github.com/users/jake-factual/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jake-factual/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jake-factual/subscriptions",
      "organizations_url": "https://api.github.com/users/jake-factual/orgs",
      "repos_url": "https://api.github.com/users/jake-factual/repos",
      "events_url": "https://api.github.com/users/jake-factual/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jake-factual/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 0,
    "created_at": "2013-07-02T23:43:54Z",
    "updated_at": "2013-07-02T23:43:54Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Every character visible on a standard American keyboard should be imported by Align and matchable.  Most are included but a few (|, `, ~) are causing exceptions.  Exception handling of characters outside this domain is a separate ticket."
  },
  {
    "url": "https://api.github.com/repos/Factual/scarecrow/issues/184",
    "labels_url": "https://api.github.com/repos/Factual/scarecrow/issues/184/labels{/name}",
    "comments_url": "https://api.github.com/repos/Factual/scarecrow/issues/184/comments",
    "events_url": "https://api.github.com/repos/Factual/scarecrow/issues/184/events",
    "html_url": "https://github.com/Factual/scarecrow/issues/184",
    "id": 16294461,
    "number": 184,
    "title": "Refactor AlignHelper.align with and without algorithm constants",
    "user": {
      "login": "jake-factual",
      "id": 2625959,
      "avatar_url": "https://avatars.githubusercontent.com/u/2625959",
      "gravatar_id": "4747668edb967d60d07b29a2f94e8308",
      "url": "https://api.github.com/users/jake-factual",
      "html_url": "https://github.com/jake-factual",
      "followers_url": "https://api.github.com/users/jake-factual/followers",
      "following_url": "https://api.github.com/users/jake-factual/following{/other_user}",
      "gists_url": "https://api.github.com/users/jake-factual/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jake-factual/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jake-factual/subscriptions",
      "organizations_url": "https://api.github.com/users/jake-factual/orgs",
      "repos_url": "https://api.github.com/users/jake-factual/repos",
      "events_url": "https://api.github.com/users/jake-factual/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jake-factual/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/Factual/scarecrow/labels/P3",
        "name": "P3",
        "color": "02e10c"
      }
    ],
    "state": "open",
    "assignee": {
      "login": "jake-factual",
      "id": 2625959,
      "avatar_url": "https://avatars.githubusercontent.com/u/2625959",
      "gravatar_id": "4747668edb967d60d07b29a2f94e8308",
      "url": "https://api.github.com/users/jake-factual",
      "html_url": "https://github.com/jake-factual",
      "followers_url": "https://api.github.com/users/jake-factual/followers",
      "following_url": "https://api.github.com/users/jake-factual/following{/other_user}",
      "gists_url": "https://api.github.com/users/jake-factual/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jake-factual/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jake-factual/subscriptions",
      "organizations_url": "https://api.github.com/users/jake-factual/orgs",
      "repos_url": "https://api.github.com/users/jake-factual/repos",
      "events_url": "https://api.github.com/users/jake-factual/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jake-factual/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 0,
    "created_at": "2013-07-02T23:41:16Z",
    "updated_at": "2013-07-02T23:41:16Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "It is preferable to have a default version of Align to call with the query string and the canonical dictionary, and a overloaded method with the additional six algorithm parameters determining match strength, etc."
  },
  {
    "url": "https://api.github.com/repos/Factual/scarecrow/issues/176",
    "labels_url": "https://api.github.com/repos/Factual/scarecrow/issues/176/labels{/name}",
    "comments_url": "https://api.github.com/repos/Factual/scarecrow/issues/176/comments",
    "events_url": "https://api.github.com/repos/Factual/scarecrow/issues/176/events",
    "html_url": "https://github.com/Factual/scarecrow/issues/176",
    "id": 15313384,
    "number": 176,
    "title": "rename scarecrow integration methods",
    "user": {
      "login": "williamlao",
      "id": 769116,
      "avatar_url": "https://avatars.githubusercontent.com/u/769116",
      "gravatar_id": "e21f5c96311b5912fcb5f53deecf416f",
      "url": "https://api.github.com/users/williamlao",
      "html_url": "https://github.com/williamlao",
      "followers_url": "https://api.github.com/users/williamlao/followers",
      "following_url": "https://api.github.com/users/williamlao/following{/other_user}",
      "gists_url": "https://api.github.com/users/williamlao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/williamlao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/williamlao/subscriptions",
      "organizations_url": "https://api.github.com/users/williamlao/orgs",
      "repos_url": "https://api.github.com/users/williamlao/repos",
      "events_url": "https://api.github.com/users/williamlao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/williamlao/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/Factual/scarecrow/labels/P3",
        "name": "P3",
        "color": "02e10c"
      }
    ],
    "state": "open",
    "assignee": {
      "login": "jinwen",
      "id": 1252068,
      "avatar_url": "https://avatars.githubusercontent.com/u/1252068",
      "gravatar_id": "60ba2a7b7f421fcea4fab9d9e80ecb94",
      "url": "https://api.github.com/users/jinwen",
      "html_url": "https://github.com/jinwen",
      "followers_url": "https://api.github.com/users/jinwen/followers",
      "following_url": "https://api.github.com/users/jinwen/following{/other_user}",
      "gists_url": "https://api.github.com/users/jinwen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jinwen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jinwen/subscriptions",
      "organizations_url": "https://api.github.com/users/jinwen/orgs",
      "repos_url": "https://api.github.com/users/jinwen/repos",
      "events_url": "https://api.github.com/users/jinwen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jinwen/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 0,
    "created_at": "2013-06-09T01:48:22Z",
    "updated_at": "2013-06-09T01:48:35Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Some of the following rules integration names are vague:\r\n\r\nhttp://wiki.corp.factual.com/display/ENG/Scarecrow+2+-+Rules+Integration+Points\r\n\r\n1) Create a wiki page for suggested renames. There should be a simple convention without any ambiguity.\r\n2) Poll a few data engineers to see if they approve.\r\n3) implement test and release with @jinwen  "
  },
  {
    "url": "https://api.github.com/repos/Factual/scarecrow/issues/174",
    "labels_url": "https://api.github.com/repos/Factual/scarecrow/issues/174/labels{/name}",
    "comments_url": "https://api.github.com/repos/Factual/scarecrow/issues/174/comments",
    "events_url": "https://api.github.com/repos/Factual/scarecrow/issues/174/events",
    "html_url": "https://github.com/Factual/scarecrow/issues/174",
    "id": 15298453,
    "number": 174,
    "title": "allow Crosswalk URLs to be extracted from mutilple fields besides sourceUrl",
    "user": {
      "login": "jennhousel",
      "id": 1079584,
      "avatar_url": "https://avatars.githubusercontent.com/u/1079584",
      "gravatar_id": "9aadcb8a30f0ae00d3d5c1572238ccfa",
      "url": "https://api.github.com/users/jennhousel",
      "html_url": "https://github.com/jennhousel",
      "followers_url": "https://api.github.com/users/jennhousel/followers",
      "following_url": "https://api.github.com/users/jennhousel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jennhousel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jennhousel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jennhousel/subscriptions",
      "organizations_url": "https://api.github.com/users/jennhousel/orgs",
      "repos_url": "https://api.github.com/users/jennhousel/repos",
      "events_url": "https://api.github.com/users/jennhousel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jennhousel/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/Factual/scarecrow/labels/P3",
        "name": "P3",
        "color": "02e10c"
      }
    ],
    "state": "open",
    "assignee": {
      "login": "justin-factual",
      "id": 3803005,
      "avatar_url": "https://avatars.githubusercontent.com/u/3803005",
      "gravatar_id": "faf06d92aeb0beaa5a58f0345d65d59d",
      "url": "https://api.github.com/users/justin-factual",
      "html_url": "https://github.com/justin-factual",
      "followers_url": "https://api.github.com/users/justin-factual/followers",
      "following_url": "https://api.github.com/users/justin-factual/following{/other_user}",
      "gists_url": "https://api.github.com/users/justin-factual/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/justin-factual/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/justin-factual/subscriptions",
      "organizations_url": "https://api.github.com/users/justin-factual/orgs",
      "repos_url": "https://api.github.com/users/justin-factual/repos",
      "events_url": "https://api.github.com/users/justin-factual/events{/privacy}",
      "received_events_url": "https://api.github.com/users/justin-factual/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 5,
    "created_at": "2013-06-08T01:42:35Z",
    "updated_at": "2013-12-17T00:31:17Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Hi Justin,\r\n\r\nWe'd like the ability to extract crosswalk URLs from multiple fields other than the sourceUrl. I have data from partners that include facebook, twitter, youtube, and other URLs for a single business, but none of them can be currently used in crosswalk.\r\n\r\nThere's two parts to the ask:\r\n1. allow crosswalk URLs to be extracted from a field other than sourceUrl\r\n2. allow crosswalk URLs to be extracted from more than one field\r\n\r\nThe fields containing additional crosswalk URLs with always lead with \"crosswalkUrl\". Examples:\r\ncrosswalkUrl_facebook\r\ncrosswalkUrl_twitter\r\ncrosswalkUrl_1\r\ncrosswalkUrl2\r\n\r\ncc @ericlui @ewalker41 "
  },
  {
    "url": "https://api.github.com/repos/Factual/scarecrow/issues/172",
    "labels_url": "https://api.github.com/repos/Factual/scarecrow/issues/172/labels{/name}",
    "comments_url": "https://api.github.com/repos/Factual/scarecrow/issues/172/comments",
    "events_url": "https://api.github.com/repos/Factual/scarecrow/issues/172/events",
    "html_url": "https://github.com/Factual/scarecrow/issues/172",
    "id": 14381510,
    "number": 172,
    "title": "Support domain equivalence in summarization",
    "user": {
      "login": "ericlui",
      "id": 840439,
      "avatar_url": "https://avatars.githubusercontent.com/u/840439",
      "gravatar_id": "385707687776be5d7a0e076d00e19beb",
      "url": "https://api.github.com/users/ericlui",
      "html_url": "https://github.com/ericlui",
      "followers_url": "https://api.github.com/users/ericlui/followers",
      "following_url": "https://api.github.com/users/ericlui/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericlui/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericlui/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericlui/subscriptions",
      "organizations_url": "https://api.github.com/users/ericlui/orgs",
      "repos_url": "https://api.github.com/users/ericlui/repos",
      "events_url": "https://api.github.com/users/ericlui/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericlui/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/Factual/scarecrow/labels/P2",
        "name": "P2",
        "color": "d7e102"
      }
    ],
    "state": "open",
    "assignee": {
      "login": "justin-factual",
      "id": 3803005,
      "avatar_url": "https://avatars.githubusercontent.com/u/3803005",
      "gravatar_id": "faf06d92aeb0beaa5a58f0345d65d59d",
      "url": "https://api.github.com/users/justin-factual",
      "html_url": "https://github.com/justin-factual",
      "followers_url": "https://api.github.com/users/justin-factual/followers",
      "following_url": "https://api.github.com/users/justin-factual/following{/other_user}",
      "gists_url": "https://api.github.com/users/justin-factual/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/justin-factual/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/justin-factual/subscriptions",
      "organizations_url": "https://api.github.com/users/justin-factual/orgs",
      "repos_url": "https://api.github.com/users/justin-factual/repos",
      "events_url": "https://api.github.com/users/justin-factual/events{/privacy}",
      "received_events_url": "https://api.github.com/users/justin-factual/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 3,
    "created_at": "2013-05-15T21:58:12Z",
    "updated_at": "2014-01-24T23:09:02Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Need a scarecrow-driven way to support domain equivalence in summarization uniquing.\r\n\r\neg.:\r\n```javascript\r\n{\r\n{\"name\":\"Starbucks\",\"sourceUrl\":\"tripadvisor.com\"},\r\n{\"name\":\"Starbucks\",\"sourceUrl\":\"tripadvisor.co.uk\"}\r\n}\r\n```\r\n\r\nShould be represented as only one input in summarization.\r\n\r\nSome thoughts:\r\n- Data team would like something map-driven and configurable by View, though a global map would also be acceptable. (number of domains this needs to be done for is probably in the hundreds)\r\n- It may be best to do this by rewriting the inputs using the equivalence map before passing them into the uniquing function.\r\n- This reduces transparency into what's happening in the summarization process, but the extra accuracy should be worth it."
  },
  {
    "url": "https://api.github.com/repos/Factual/scarecrow/issues/161",
    "labels_url": "https://api.github.com/repos/Factual/scarecrow/issues/161/labels{/name}",
    "comments_url": "https://api.github.com/repos/Factual/scarecrow/issues/161/comments",
    "events_url": "https://api.github.com/repos/Factual/scarecrow/issues/161/events",
    "html_url": "https://github.com/Factual/scarecrow/issues/161",
    "id": 13375287,
    "number": 161,
    "title": "increase voting strength range",
    "user": {
      "login": "ericlui",
      "id": 840439,
      "avatar_url": "https://avatars.githubusercontent.com/u/840439",
      "gravatar_id": "385707687776be5d7a0e076d00e19beb",
      "url": "https://api.github.com/users/ericlui",
      "html_url": "https://github.com/ericlui",
      "followers_url": "https://api.github.com/users/ericlui/followers",
      "following_url": "https://api.github.com/users/ericlui/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericlui/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericlui/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericlui/subscriptions",
      "organizations_url": "https://api.github.com/users/ericlui/orgs",
      "repos_url": "https://api.github.com/users/ericlui/repos",
      "events_url": "https://api.github.com/users/ericlui/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericlui/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "assignee": {
      "login": "justin-factual",
      "id": 3803005,
      "avatar_url": "https://avatars.githubusercontent.com/u/3803005",
      "gravatar_id": "faf06d92aeb0beaa5a58f0345d65d59d",
      "url": "https://api.github.com/users/justin-factual",
      "html_url": "https://github.com/justin-factual",
      "followers_url": "https://api.github.com/users/justin-factual/followers",
      "following_url": "https://api.github.com/users/justin-factual/following{/other_user}",
      "gists_url": "https://api.github.com/users/justin-factual/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/justin-factual/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/justin-factual/subscriptions",
      "organizations_url": "https://api.github.com/users/justin-factual/orgs",
      "repos_url": "https://api.github.com/users/justin-factual/repos",
      "events_url": "https://api.github.com/users/justin-factual/events{/privacy}",
      "received_events_url": "https://api.github.com/users/justin-factual/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 0,
    "created_at": "2013-04-18T21:56:05Z",
    "updated_at": "2013-04-18T21:56:05Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "When complete, deprecates:\r\nhttps://github.com/Factual/scarecrow/issues/160\r\n\r\n(ie., rollback the behavior for #160 )\r\n\r\nAllow yext votes to over-ride an arbitrary number of lesser votes (fieldgrabber, validation, etc.)\r\n\r\nThis will need a back issue to change the size of the weight (?) field in thrift, which is currently a short."
  },
  {
    "url": "https://api.github.com/repos/Factual/scarecrow/issues/147",
    "labels_url": "https://api.github.com/repos/Factual/scarecrow/issues/147/labels{/name}",
    "comments_url": "https://api.github.com/repos/Factual/scarecrow/issues/147/comments",
    "events_url": "https://api.github.com/repos/Factual/scarecrow/issues/147/events",
    "html_url": "https://github.com/Factual/scarecrow/issues/147",
    "id": 12304657,
    "number": 147,
    "title": "Extract from multiple fields into one attribute",
    "user": {
      "login": "justin-factual",
      "id": 3803005,
      "avatar_url": "https://avatars.githubusercontent.com/u/3803005",
      "gravatar_id": "faf06d92aeb0beaa5a58f0345d65d59d",
      "url": "https://api.github.com/users/justin-factual",
      "html_url": "https://github.com/justin-factual",
      "followers_url": "https://api.github.com/users/justin-factual/followers",
      "following_url": "https://api.github.com/users/justin-factual/following{/other_user}",
      "gists_url": "https://api.github.com/users/justin-factual/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/justin-factual/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/justin-factual/subscriptions",
      "organizations_url": "https://api.github.com/users/justin-factual/orgs",
      "repos_url": "https://api.github.com/users/justin-factual/repos",
      "events_url": "https://api.github.com/users/justin-factual/events{/privacy}",
      "received_events_url": "https://api.github.com/users/justin-factual/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/Factual/scarecrow/labels/feature+request",
        "name": "feature request",
        "color": "02d7e1"
      }
    ],
    "state": "open",
    "assignee": {
      "login": "justin-factual",
      "id": 3803005,
      "avatar_url": "https://avatars.githubusercontent.com/u/3803005",
      "gravatar_id": "faf06d92aeb0beaa5a58f0345d65d59d",
      "url": "https://api.github.com/users/justin-factual",
      "html_url": "https://github.com/justin-factual",
      "followers_url": "https://api.github.com/users/justin-factual/followers",
      "following_url": "https://api.github.com/users/justin-factual/following{/other_user}",
      "gists_url": "https://api.github.com/users/justin-factual/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/justin-factual/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/justin-factual/subscriptions",
      "organizations_url": "https://api.github.com/users/justin-factual/orgs",
      "repos_url": "https://api.github.com/users/justin-factual/repos",
      "events_url": "https://api.github.com/users/justin-factual/events{/privacy}",
      "received_events_url": "https://api.github.com/users/justin-factual/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 1,
    "created_at": "2013-03-22T02:35:18Z",
    "updated_at": "2013-03-22T02:49:05Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "We would like the ability to use a single extractor to pull values from multiple input fields into a single, combined attribute.  Cleaning, canonicalization, and validation rules should all operate on individual elements of the resulting collection.\r\n\r\nExample payload:\r\n```json\r\n{\"field_1\":\"good value a\",\"field_2\":\"bad value\",\r\n\"field_3\":\"good value b\",\"other\":\"asdf\"}\r\n```\r\n\r\nLabel selector: /field_[0-9]+/\r\n\r\nIf the datatype's validator rejects \"bad value\", the resulting attribute value should be:\r\n```json\r\n[\"good value a\", \"good value b\"]\r\n```\r\n\r\n@jake-factual is this an accurate description of your use case?"
  },
  {
    "url": "https://api.github.com/repos/Factual/scarecrow/issues/140",
    "labels_url": "https://api.github.com/repos/Factual/scarecrow/issues/140/labels{/name}",
    "comments_url": "https://api.github.com/repos/Factual/scarecrow/issues/140/comments",
    "events_url": "https://api.github.com/repos/Factual/scarecrow/issues/140/events",
    "html_url": "https://github.com/Factual/scarecrow/issues/140",
    "id": 11187943,
    "number": 140,
    "title": "setting up of performance-tests",
    "user": {
      "login": "williamlao",
      "id": 769116,
      "avatar_url": "https://avatars.githubusercontent.com/u/769116",
      "gravatar_id": "e21f5c96311b5912fcb5f53deecf416f",
      "url": "https://api.github.com/users/williamlao",
      "html_url": "https://github.com/williamlao",
      "followers_url": "https://api.github.com/users/williamlao/followers",
      "following_url": "https://api.github.com/users/williamlao/following{/other_user}",
      "gists_url": "https://api.github.com/users/williamlao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/williamlao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/williamlao/subscriptions",
      "organizations_url": "https://api.github.com/users/williamlao/orgs",
      "repos_url": "https://api.github.com/users/williamlao/repos",
      "events_url": "https://api.github.com/users/williamlao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/williamlao/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 7,
    "created_at": "2013-02-20T08:01:53Z",
    "updated_at": "2013-03-05T04:07:48Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "@khuynh1 @justinfenn \r\n\r\n\r\nAs discussed Justin, lets modify jenkins scarecrow performance-test to read the dataset id from a static file. This way we can generate the current seed file, rather than reading a prebuilt seed.json file that could get outdated.\r\n\r\nhere is a sample folder for the new structure:\r\n\r\n```\r\nwill@dev101:/share/sc-tests/poi.ca$ls\r\ndataset_id  sample.json\r\n```\r\n\r\nthe script should extract the 'hbMLz9' from dataset_id file. and test as before but this time with the dataset_id.\r\n\r\n```\r\nwill@dev101:~/code/scarecrow-rules [GIT:master] $scarecrow test_performance hbMLz9 /share/sc-tests/poi.ca/sample.json\r\n--- performance testing hbMLz9 ---\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  2739    0  2739    0     0   836k      0 --:--:-- --:--:-- --:--:-- 2674k\r\njava.lang.UnsatisfiedLinkError: no mdAddrJavaWrapper in java.library.path\r\njava.library.path = /usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib\r\n2013-02-19 23:53:14,090 [main] INFO  com.factual.melissa.MelissaAddressFactory - Defaulting to Remote Mode\r\n2013-02-19 23:53:14,092 [main] INFO  com.factual.melissa.MelissaAddressFactory - melissaAddressFactory using remote mode\r\nResults: Expected: 0.0409998893737793 Actual extract time: 0.0143519999980927\r\n```"
  },
  {
    "url": "https://api.github.com/repos/Factual/scarecrow/issues/139",
    "labels_url": "https://api.github.com/repos/Factual/scarecrow/issues/139/labels{/name}",
    "comments_url": "https://api.github.com/repos/Factual/scarecrow/issues/139/comments",
    "events_url": "https://api.github.com/repos/Factual/scarecrow/issues/139/events",
    "html_url": "https://github.com/Factual/scarecrow/issues/139",
    "id": 11187702,
    "number": 139,
    "title": "screws API to return the names and types of target files within a given package",
    "user": {
      "login": "egamble",
      "id": 762417,
      "avatar_url": "https://avatars.githubusercontent.com/u/762417",
      "gravatar_id": "7e04f4b08621c9b59fbf38bce70a7458",
      "url": "https://api.github.com/users/egamble",
      "html_url": "https://github.com/egamble",
      "followers_url": "https://api.github.com/users/egamble/followers",
      "following_url": "https://api.github.com/users/egamble/following{/other_user}",
      "gists_url": "https://api.github.com/users/egamble/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/egamble/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/egamble/subscriptions",
      "organizations_url": "https://api.github.com/users/egamble/orgs",
      "repos_url": "https://api.github.com/users/egamble/repos",
      "events_url": "https://api.github.com/users/egamble/events{/privacy}",
      "received_events_url": "https://api.github.com/users/egamble/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "assignee": {
      "login": "agate",
      "id": 21731,
      "avatar_url": "https://avatars.githubusercontent.com/u/21731",
      "gravatar_id": "b83f65b720896d40f0c648e55649a85f",
      "url": "https://api.github.com/users/agate",
      "html_url": "https://github.com/agate",
      "followers_url": "https://api.github.com/users/agate/followers",
      "following_url": "https://api.github.com/users/agate/following{/other_user}",
      "gists_url": "https://api.github.com/users/agate/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agate/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agate/subscriptions",
      "organizations_url": "https://api.github.com/users/agate/orgs",
      "repos_url": "https://api.github.com/users/agate/repos",
      "events_url": "https://api.github.com/users/agate/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agate/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 0,
    "created_at": "2013-02-20T07:47:58Z",
    "updated_at": "2013-02-20T07:50:15Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "For free text extractors stored in scarecrow-rules, I'd like to get a list of all the files for a given package with a call like:\r\n\r\nhttp://screws.factual.com/packagetargets/leafgrabber.free_text?v=cf2d7cfcf852ec1a03fa211c758ad20deec0611a\r\n\r\nwhich could return something like:\r\n\r\n```\r\n{\r\n \"targets\":\r\n   [{\"type\": \"json\",\r\n      \"name\": \"smoking\"},\r\n\r\n    {\"type\": \"json\",\r\n     \"name\": \"smoking_test\"},\r\n\r\n    {\"type\": \"json\",\r\n     \"name\": \"smoking_test2\"}],\r\n\r\n \"package\": \"leafgrabber.free_text\",\r\n \"sha\": \"cf2d7cfcf852ec1a03fa211c758ad20deec0611a\"\r\n}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/Factual/scarecrow/issues/128",
    "labels_url": "https://api.github.com/repos/Factual/scarecrow/issues/128/labels{/name}",
    "comments_url": "https://api.github.com/repos/Factual/scarecrow/issues/128/comments",
    "events_url": "https://api.github.com/repos/Factual/scarecrow/issues/128/events",
    "html_url": "https://github.com/Factual/scarecrow/issues/128",
    "id": 9724393,
    "number": 128,
    "title": "testing framework around Custom Summarizers",
    "user": {
      "login": "williamlao",
      "id": 769116,
      "avatar_url": "https://avatars.githubusercontent.com/u/769116",
      "gravatar_id": "e21f5c96311b5912fcb5f53deecf416f",
      "url": "https://api.github.com/users/williamlao",
      "html_url": "https://github.com/williamlao",
      "followers_url": "https://api.github.com/users/williamlao/followers",
      "following_url": "https://api.github.com/users/williamlao/following{/other_user}",
      "gists_url": "https://api.github.com/users/williamlao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/williamlao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/williamlao/subscriptions",
      "organizations_url": "https://api.github.com/users/williamlao/orgs",
      "repos_url": "https://api.github.com/users/williamlao/repos",
      "events_url": "https://api.github.com/users/williamlao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/williamlao/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/Factual/scarecrow/labels/P3",
        "name": "P3",
        "color": "02e10c"
      },
      {
        "url": "https://api.github.com/repos/Factual/scarecrow/labels/feature+request",
        "name": "feature request",
        "color": "02d7e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 3,
    "created_at": "2013-01-07T03:34:54Z",
    "updated_at": "2013-03-14T02:11:14Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "We need a way to integrate testing of custom summarizers to sc-rules.\r\n\r\nCurrently we are testing custom summarizers by creating a test view and invoking\r\n  scarecrow view:summarize test_view test_inputs\r\nThis is cumbersome and does not conform to regression testing. \r\n\r\n\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/Factual/scarecrow/issues/122",
    "labels_url": "https://api.github.com/repos/Factual/scarecrow/issues/122/labels{/name}",
    "comments_url": "https://api.github.com/repos/Factual/scarecrow/issues/122/comments",
    "events_url": "https://api.github.com/repos/Factual/scarecrow/issues/122/events",
    "html_url": "https://github.com/Factual/scarecrow/issues/122",
    "id": 9159965,
    "number": 122,
    "title": "Optimistic international writes",
    "user": {
      "login": "48snickers",
      "id": 808085,
      "avatar_url": "https://avatars.githubusercontent.com/u/808085",
      "gravatar_id": "747ddee91b95712f4cb7f643d0c78425",
      "url": "https://api.github.com/users/48snickers",
      "html_url": "https://github.com/48snickers",
      "followers_url": "https://api.github.com/users/48snickers/followers",
      "following_url": "https://api.github.com/users/48snickers/following{/other_user}",
      "gists_url": "https://api.github.com/users/48snickers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/48snickers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/48snickers/subscriptions",
      "organizations_url": "https://api.github.com/users/48snickers/orgs",
      "repos_url": "https://api.github.com/users/48snickers/repos",
      "events_url": "https://api.github.com/users/48snickers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/48snickers/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/Factual/scarecrow/labels/P2",
        "name": "P2",
        "color": "d7e102"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2012-12-10T21:41:32Z",
    "updated_at": "2012-12-10T21:41:32Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "We want to move to an optimistic write model for ROW.  Hopefully its as simple as updating the ROW scarecrow rules to use ACCEPT_AND_MODERATE instead of UNPROCESSED_AND_MODERATE for the ModerationAction."
  },
  {
    "url": "https://api.github.com/repos/Factual/scarecrow/issues/99",
    "labels_url": "https://api.github.com/repos/Factual/scarecrow/issues/99/labels{/name}",
    "comments_url": "https://api.github.com/repos/Factual/scarecrow/issues/99/comments",
    "events_url": "https://api.github.com/repos/Factual/scarecrow/issues/99/events",
    "html_url": "https://github.com/Factual/scarecrow/issues/99",
    "id": 7500181,
    "number": 99,
    "title": "Merge JRE2 into scarecrow",
    "user": {
      "login": "williamlao",
      "id": 769116,
      "avatar_url": "https://avatars.githubusercontent.com/u/769116",
      "gravatar_id": "e21f5c96311b5912fcb5f53deecf416f",
      "url": "https://api.github.com/users/williamlao",
      "html_url": "https://github.com/williamlao",
      "followers_url": "https://api.github.com/users/williamlao/followers",
      "following_url": "https://api.github.com/users/williamlao/following{/other_user}",
      "gists_url": "https://api.github.com/users/williamlao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/williamlao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/williamlao/subscriptions",
      "organizations_url": "https://api.github.com/users/williamlao/orgs",
      "repos_url": "https://api.github.com/users/williamlao/repos",
      "events_url": "https://api.github.com/users/williamlao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/williamlao/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2012-10-11T00:15:11Z",
    "updated_at": "2014-01-04T01:59:05Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Merge JRE2 changes on scarecrow (sc2jre2) to scarecrow develop"
  },
  {
    "url": "https://api.github.com/repos/Factual/scarecrow/issues/93",
    "labels_url": "https://api.github.com/repos/Factual/scarecrow/issues/93/labels{/name}",
    "comments_url": "https://api.github.com/repos/Factual/scarecrow/issues/93/comments",
    "events_url": "https://api.github.com/repos/Factual/scarecrow/issues/93/events",
    "html_url": "https://github.com/Factual/scarecrow/issues/93",
    "id": 7113972,
    "number": 93,
    "title": "Encoding issue causes unit test failure",
    "user": {
      "login": "capken",
      "id": 16479,
      "avatar_url": "https://avatars.githubusercontent.com/u/16479",
      "gravatar_id": "b1d0bc7d55312bea740f338cbcc0684e",
      "url": "https://api.github.com/users/capken",
      "html_url": "https://github.com/capken",
      "followers_url": "https://api.github.com/users/capken/followers",
      "following_url": "https://api.github.com/users/capken/following{/other_user}",
      "gists_url": "https://api.github.com/users/capken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/capken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/capken/subscriptions",
      "organizations_url": "https://api.github.com/users/capken/orgs",
      "repos_url": "https://api.github.com/users/capken/repos",
      "events_url": "https://api.github.com/users/capken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/capken/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/Factual/scarecrow/labels/P1",
        "name": "P1",
        "color": "e10c02"
      }
    ],
    "state": "open",
    "assignee": {
      "login": "mavericklou",
      "id": 855457,
      "avatar_url": "https://avatars.githubusercontent.com/u/855457",
      "gravatar_id": "3ac8358ad512d67bcc318b436ab9eb42",
      "url": "https://api.github.com/users/mavericklou",
      "html_url": "https://github.com/mavericklou",
      "followers_url": "https://api.github.com/users/mavericklou/followers",
      "following_url": "https://api.github.com/users/mavericklou/following{/other_user}",
      "gists_url": "https://api.github.com/users/mavericklou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mavericklou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mavericklou/subscriptions",
      "organizations_url": "https://api.github.com/users/mavericklou/orgs",
      "repos_url": "https://api.github.com/users/mavericklou/repos",
      "events_url": "https://api.github.com/users/mavericklou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mavericklou/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 16,
    "created_at": "2012-09-25T06:48:56Z",
    "updated_at": "2013-03-21T18:25:49Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "this [commit](https://github.com/Factual/scarecrow/commit/245fdfb3e211dac59776483241667cd60769fe61) caused some encoding issues, and some unit tests failure such as:\n\nscarecrow test poi.cn.Region\n\nAll the tests should be successful."
  },
  {
    "url": "https://api.github.com/repos/Factual/scarecrow/issues/88",
    "labels_url": "https://api.github.com/repos/Factual/scarecrow/issues/88/labels{/name}",
    "comments_url": "https://api.github.com/repos/Factual/scarecrow/issues/88/comments",
    "events_url": "https://api.github.com/repos/Factual/scarecrow/issues/88/events",
    "html_url": "https://github.com/Factual/scarecrow/issues/88",
    "id": 6998782,
    "number": 88,
    "title": "add option in melissa address helper to enable/disable dpv",
    "user": {
      "login": "chunhk",
      "id": 840459,
      "avatar_url": "https://avatars.githubusercontent.com/u/840459",
      "gravatar_id": "8de253c5bb87b6f726e45afd9df671cc",
      "url": "https://api.github.com/users/chunhk",
      "html_url": "https://github.com/chunhk",
      "followers_url": "https://api.github.com/users/chunhk/followers",
      "following_url": "https://api.github.com/users/chunhk/following{/other_user}",
      "gists_url": "https://api.github.com/users/chunhk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chunhk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chunhk/subscriptions",
      "organizations_url": "https://api.github.com/users/chunhk/orgs",
      "repos_url": "https://api.github.com/users/chunhk/repos",
      "events_url": "https://api.github.com/users/chunhk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chunhk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/Factual/scarecrow/labels/P2",
        "name": "P2",
        "color": "d7e102"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2012-09-19T23:58:57Z",
    "updated_at": "2013-03-14T02:11:14Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": ""
  }
]
